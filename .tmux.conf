# ~/.tmux.conf
# Enhanced tmux configuration for macOS

# Set prefix to Ctrl-a (easier to type than Ctrl-b)
unbind C-b
set -g prefix C-a
bind C-a send-prefix

# Improve colors
set -g default-terminal "screen-256color"
set -ga terminal-overrides ",xterm-256color:Tc"

# Increase scrollback buffer size
set -g history-limit 50000

# Enable mouse support
set -g mouse on

# Start window and pane numbering at 1
set -g base-index 1
setw -g pane-base-index 1

# Automatically renumber windows
set -g renumber-windows on

# Enable vi mode
setw -g mode-keys vi

# Set escape time to 0 for neovim
set -sg escape-time 0

# Refresh status line every 5 seconds
set -g status-interval 5

# Status bar customization
set -g status-style fg=white,bg=black
set -g window-status-current-style fg=black,bg=white,bold
set -g status-left-length 40
set -g status-left "#[fg=green]Session: #S #[fg=yellow]Window: #I #[fg=cyan]Pane: #P"
set -g status-right "#[fg=cyan]%d %b %R"

# Pane borders
set -g pane-border-style fg=green
set -g pane-active-border-style fg=brightred

# Notification
setw -g monitor-activity on
set -g visual-activity on

# Easier window splits
bind-key v split-window -h
bind-key s split-window -v

# Vim-like pane navigation
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Resize panes with Prefix + arrow keys
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Reload tmux.conf with prefix-r
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# Use vim-like keys for copy mode
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel

# macOS-specific settings for clipboard integration
if-shell "uname | grep -q Darwin" {
    bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel 'pbcopy'
    bind-key -T copy-mode-vi MouseDragEnd1Pane send -X copy-pipe-and-cancel 'pbcopy'
}

# Smart pane switching with awareness of Vim splits
# Use Alt-arrow keys without prefix key to switch panes
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind -n M-Left if-shell "$is_vim" "send-keys M-Left"  "select-pane -L"
bind -n M-Down if-shell "$is_vim" "send-keys M-Down"  "select-pane -D"
bind -n M-Up if-shell "$is_vim" "send-keys M-Up"  "select-pane -U"
bind -n M-Right if-shell "$is_vim" "send-keys M-Right"  "select-pane -R"
